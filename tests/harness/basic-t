#! /bin/sh
#
# Test suite for basic runtests functionality.
#
# Copyright 2008-2009, 2012-2013, 2016 Russ Allbery <eagle@eyrie.org>
#
# SPDX-License-Identifier: MIT

. "$C_TAP_SOURCE/tap/libtap.sh"
cd "$C_TAP_BUILD"

# Run runtests on a list and compare the output to the expected output,
# printing ok if it matches.  Strip out the time information from the runtests
# result since it changes for each run.
ok_runtests () {
    "$C_TAP_BUILD"/runtests -s "${C_TAP_SOURCE}/harness/basic"  \
                  -b "${C_TAP_BUILD}/harness/basic"             \
                  -l "${C_TAP_SOURCE}/harness/basic/$1".list    \
        | sed 's/\(Tests=[0-9]*\),  .*/\1/' > "$1".result
    diff -u "${C_TAP_SOURCE}/harness/basic/$1".output "$1".result 2>&1
    status=$?
    ok "$1 test set" [ $status -eq 0 ]
    if [ $status -eq 0 ] ; then
        rm "$1".result
    fi
    rm -f core core.*
}

# Total tests.
plan 8

# Run the tests.
ok_runtests pass
ok_runtests skip
ok_runtests fail
ok_runtests abort
ok_runtests abort-one
ok_runtests empty

# Check that running runtests with a list and another argument fails and
# produces the usage message.
runtests="${C_TAP_BUILD}/runtests"
output=`"$runtests" -l "${C_TAP_SOURCE}/harness/basic/pass.list" pass 2>&1`
status=$?
ok 'runtests with list and argument fails' [ $status -eq 1 ]
echo "$output" | grep Usage: >/dev/null 2>&1
status=$?
ok '...and produces usage message' [ $status -eq 0 ]
